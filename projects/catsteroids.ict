{
  "notes": "ct.types.move(this);\n\nthis.shootTimer --;\nif (this.shootTimer < 0) {\n    ct.types.copy('EnemyBullet', this.x, this.y);\n    this.shootTimer = 3 * ct.speed;\n}\n\nvar obstacle = ct.place.occupied(this, this.x, this.y, 'BulletsHeroes');\nif (obstacle) {\n    this.kill = true;\n    obstacle.kill = true;\n    \n    // Add some score points\n    ct.rooms.current.score += 25;\n}\n\nif (this.y > ct.room.height + 100) {\n    this.kill = true;\n}",
  "libs": {
    "place": {},
    "akatemplate": {
      "csscss": "canvas {\n  margin: 0 auto;\n  display: block;\n}\nbody {\n  background: #1b1f26;\n}",
      "toptop": "<link href=\"https://fonts.googleapis.com/css?family=Press+Start+2P\" rel=\"stylesheet\">"
    },
    "random": {},
    "keyboard": {}
  },
  "graphs": [
    {
      "name": "PlayerShip_Blue",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        56,
        37
      ],
      "origname": "i1.png",
      "shape": "rect",
      "left": 48,
      "top": 10,
      "frames": 1,
      "width": 112,
      "height": 75,
      "marginx": 0,
      "marginy": 0,
      "offy": 0,
      "offx": 0,
      "right": 48,
      "bottom": 34,
      "r": 20
    },
    {
      "name": "Background_Blue",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        0,
        0
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i2.png",
      "shape": "circle",
      "left": 0,
      "right": 256,
      "top": 0,
      "bottom": 256,
      "frames": 1,
      "width": 256,
      "height": 256,
      "r": 1
    },
    {
      "name": "Laser_Simple_Blue",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        4,
        27
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i3.png",
      "shape": "rect",
      "left": 4,
      "right": 5,
      "top": 27,
      "bottom": 27,
      "frames": 1,
      "width": 9,
      "height": 54,
      "lastmod": 1508500558054
    },
    {
      "name": "Laser_X_Blue",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        19,
        18
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i4.png",
      "shape": "circle",
      "left": 19,
      "right": 19,
      "top": 18,
      "bottom": 19,
      "frames": 1,
      "width": 38,
      "height": 37,
      "r": 21
    },
    {
      "name": "Laser_Bolt_Blue",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        6,
        28
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i5.png",
      "shape": "rect",
      "left": 6,
      "right": 7,
      "top": 28,
      "bottom": 29,
      "frames": 1,
      "width": 13,
      "height": 57,
      "lastmod": 1508497007651
    },
    {
      "name": "Meteor_Small_1",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        14,
        14
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i10.png",
      "shape": "circle",
      "left": 0,
      "right": 28,
      "top": 0,
      "bottom": 28,
      "frames": 1,
      "width": 28,
      "height": 28,
      "r": 13,
      "lastmod": 1508497578339
    },
    {
      "name": "Meteor_Small_2",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        14,
        13
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i11.png",
      "shape": "circle",
      "left": 0,
      "right": 29,
      "top": 0,
      "bottom": 26,
      "frames": 1,
      "width": 29,
      "height": 26,
      "r": 13,
      "lastmod": 1508497573411
    },
    {
      "name": "Meteor_Medium_1",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        22,
        21
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i12.png",
      "shape": "circle",
      "left": 0,
      "right": 45,
      "top": 0,
      "bottom": 40,
      "frames": 1,
      "width": 43,
      "height": 43,
      "r": 21,
      "lastmod": 1508497609983
    },
    {
      "name": "Meteor_Medium_2",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        22,
        20
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i13.png",
      "shape": "circle",
      "left": 0,
      "right": 45,
      "top": 0,
      "bottom": 40,
      "frames": 1,
      "width": 45,
      "height": 40,
      "r": 20,
      "lastmod": 1508497627007
    },
    {
      "name": "Meteor_Big_1",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        44,
        42
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i14.png",
      "shape": "circle",
      "left": 0,
      "right": 0,
      "top": 0,
      "bottom": 0,
      "frames": 1,
      "width": 89,
      "height": 82,
      "r": 40,
      "lastmod": 1508497681131
    },
    {
      "name": "Meteor_Big_2",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        49,
        50
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i15.png",
      "shape": "circle",
      "left": 0,
      "right": 98,
      "top": 0,
      "bottom": 96,
      "frames": 1,
      "width": 98,
      "height": 96,
      "r": 46,
      "lastmod": 1508497704244
    },
    {
      "name": "StartButton",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        191,
        81
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i18.png",
      "shape": "rect",
      "left": 135,
      "right": 160,
      "top": 60,
      "bottom": 55,
      "frames": 1,
      "width": 382,
      "height": 162,
      "r": 81,
      "lastmod": 1521782180242
    },
    {
      "name": "CatsteroidsLogo",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        319,
        126
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i19.png",
      "shape": "rect",
      "left": 319,
      "right": 319,
      "top": 126,
      "bottom": 126,
      "frames": 1,
      "width": 638,
      "height": 252,
      "lastmod": 1521696185869
    },
    {
      "name": "Bonus_Lives",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        26,
        26
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i20.png",
      "shape": "rect",
      "left": 26,
      "right": 26,
      "top": 26,
      "bottom": 26,
      "frames": 1,
      "width": 52,
      "height": 52,
      "lastmod": 1521786316435
    },
    {
      "name": "Bonus_Spread",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        26,
        26
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i21.png",
      "shape": "rect",
      "left": 26,
      "right": 26,
      "top": 26,
      "bottom": 26,
      "frames": 1,
      "width": 52,
      "height": 52,
      "lastmod": 1521786327821
    },
    {
      "name": "Bonus_Bolt",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        26,
        27
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i22.png",
      "shape": "rect",
      "left": 26,
      "right": 26,
      "top": 27,
      "bottom": 28,
      "frames": 1,
      "width": 52,
      "height": 55,
      "lastmod": 1521786348095
    },
    {
      "name": "Bonus_Cross",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        26,
        26
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i23.png",
      "shape": "rect",
      "left": 26,
      "right": 26,
      "top": 26,
      "bottom": 26,
      "frames": 1,
      "width": 52,
      "height": 52,
      "lastmod": 1521786359659
    },
    {
      "name": "Enemy_Shooter",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        46,
        42
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i24.png",
      "shape": "circle",
      "left": 0,
      "right": 0,
      "top": 0,
      "bottom": 0,
      "frames": 1,
      "width": 93,
      "height": 84,
      "r": 42,
      "lastmod": 1521789170242
    },
    {
      "name": "Enemy_Wiggler",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        52,
        42
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i25.png",
      "shape": "circle",
      "left": 0,
      "right": 104,
      "top": 0,
      "bottom": 84,
      "frames": 1,
      "width": 104,
      "height": 84,
      "r": 42,
      "lastmod": 1521789187123
    },
    {
      "name": "Laser_Red",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        4,
        18
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i26.png",
      "shape": "rect",
      "left": 4,
      "right": 5,
      "top": 18,
      "bottom": 19,
      "frames": 1,
      "width": 9,
      "height": 37,
      "lastmod": 1521789393030
    },
    {
      "name": "Explosion",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        70,
        52
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i27.png",
      "shape": "circle",
      "left": 70,
      "right": 70,
      "top": 52,
      "bottom": 53,
      "frames": 1,
      "width": 140,
      "height": 105,
      "r": 52,
      "lastmod": 1521789649001
    },
    {
      "name": "Ufo_Red",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        45,
        45
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i28.png",
      "shape": "circle",
      "left": 0,
      "right": 91,
      "top": 0,
      "bottom": 91,
      "frames": 1,
      "width": 91,
      "height": 91,
      "r": 45,
      "lastmod": 1521795757737
    },
    {
      "name": "Laser_Cross_Red",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        18,
        18
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i29.png",
      "shape": "circle",
      "left": 0,
      "right": 37,
      "top": 0,
      "bottom": 36,
      "frames": 1,
      "width": 37,
      "height": 36,
      "r": 18,
      "lastmod": 1521797622884
    },
    {
      "name": "RetryButton",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        170,
        73
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i30.png",
      "shape": "rect",
      "left": 155,
      "right": 140,
      "top": 40,
      "bottom": 40,
      "frames": 1,
      "width": 340,
      "height": 146,
      "lastmod": 1521798557721
    },
    {
      "name": "OhNo",
      "untill": 0,
      "grid": [
        1,
        1
      ],
      "axis": [
        298,
        159
      ],
      "marginx": 0,
      "marginy": 0,
      "offx": 0,
      "offy": 0,
      "origname": "i31.png",
      "shape": "rect",
      "left": 298,
      "right": 298,
      "top": 159,
      "bottom": 160,
      "frames": 1,
      "width": 596,
      "height": 319,
      "lastmod": 1521799064360
    }
  ],
  "types": [
    {
      "name": "Player_Blue",
      "depth": 5,
      "oncreate": "// Set movement friction, acceleration and speed limit\nthis.friction = 0.5;\nthis.flyspeed = 5;\nthis.maxspeed = 15;\n\n// This will help us to shoot continuously\nthis.shootTimer = 0;\n\nthis.lives = 3;\nthis.invulnerable = -1;\n\nthis.weapon = 'simple';",
      "onstep": "/* Movement \n   Add acceleration when arrows are being pressed\n*/\n\nif (ct.keyboard.down['down']) {\n    ct.types.addSpeed(this, this.flyspeed, 270);\n}\nif (ct.keyboard.down['up']) {\n    ct.types.addSpeed(this, this.flyspeed, 90);\n}\nif (ct.keyboard.down['left']) {\n    ct.types.addSpeed(this, this.flyspeed, 180);\n}\nif (ct.keyboard.down['right']) {\n    ct.types.addSpeed(this, this.flyspeed, 0);\n}\nconsole.log(ct.keyboard.key);\n\n// Limit speed\nthis.spd = Math.max(Math.min(this.spd, this.spd - this.friction, this.maxspeed), 0);\nct.types.move(this);\n\n// Check if the ship is out of the room\nif (this.x < 0 || this.x > ct.room.width ||\n    this.y < 0 || this.y > ct.room.height) {\n    // Return back if the ship is outside the room\n    this.spd = 0;\n    this.x = Math.max(Math.min(this.x, ct.room.width), 0);\n    this.y = Math.max(Math.min(this.y, ct.room.height), 0);\n}\n\n/* Shooting */\n\nthis.shootTimer++;\n\n// If the spacebar is pressed and at least a quarter of second has passed, \n// create a new laser bullet depending on a weapon type\nif (ct.keyboard.down['space']) {\n    if (this.weapon === 'simple' && this.shootTimer > ct.speed * 0.25) {\n        ct.types.copy('Laser_Simple_Blue', this.x, this.y);\n        ct.sound.spawn('Laser_Small');\n        // Reset shooting delay\n        this.shootTimer = 0;\n    }\n    if (this.weapon === 'spread' && this.shootTimer > ct.speed * 0.25) {\n        // create three laser bolts\n        ct.types.copy('Laser_Simple_Blue', this.x-40, this.y);\n        ct.types.copy('Laser_Simple_Blue', this.x, this.y - 20);\n        ct.types.copy('Laser_Simple_Blue', this.x+40, this.y);\n        ct.sound.spawn('Laser_Small');\n        // Reset shooting delay\n        this.shootTimer = 0;\n    }\n    if (this.weapon === 'bolt' && this.shootTimer > ct.speed * 1.5) {\n        // slow, but powerful\n        ct.types.copy('Laser_Bolt_Blue', this.x, this.y);\n        ct.sound.spawn('Laser_Medium');\n        // Reset shooting delay\n        this.shootTimer = 0;\n    }\n    if (this.weapon === 'cross' && this.shootTimer > ct.speed * 0.15) {\n        // this one shoots much faster\n        ct.types.copy('Laser_Cross_Blue', this.x, this.y);\n        ct.sound.spawn('Laser_Medium');\n        // Reset shooting delay\n        this.shootTimer = 0;\n    }\n}\n\n/* Damage on collision */\nvar obstacle = ct.place.occupied(this, this.x, this.y, 'Enemy') \n            || ct.place.occupied(this, this.x, this.y, 'EnemyBullet');\nif (obstacle && this.invulnerable < 0) {\n    this.lives--;\n    obstacle.kill = true;\n    \n    // Are we completely, like, dead?\n    if (this.lives < 0) {\n        this.kill = true;\n    } else {\n        // Set invulnerability for 3 seconds\n        this.invulnerable = ct.speed * 3;\n    }\n}\n// Deplete invulnerability\nthis.invulnerable --;",
      "ondraw": "// If we are invulnerable, alternate between full and partial opacity each 10 frames\n// `this.invulnerable % 20` means 'get a fraction remainder when dividing by 20'\n// `statement? 0.5 : 1` means that we pick 0.5 if the statement is true, or 1 otherwise\nif (this.invulnerable > 0) {\n    ct.x.globalAlpha = this.invulnerable % 20 > 10? 0.5 : 1;\n}\nct.draw(this);\n\n// Always return to a previous drawing state\nct.x.globalAlpha = 1;\n\n// Draw small ship icons in a top-right corner\nfor (var i = 0; i < this.lives; i++) {\n    ct.draw.imgext(this.graph, 0, ct.room.width - 32 - i*48, 32, 0.3, 0.3, 0, 1)\n}",
      "ondestroy": "ct.types.copy('Explosion', this.x, this.y);\nlocalStorage.score = ct.room.score;\nsetTimeout(function() {\n    ct.rooms.switch('RetryScreen');\n}, 3000);",
      "uid": 1,
      "graph": "i1.png"
    },
    {
      "name": "Laser_Simple_Blue",
      "depth": -1,
      "oncreate": "this.spd = 30;\nthis.dir = 90;\nthis.ctype = 'BulletsHeroes';",
      "onstep": "if (this.y < -48) {\n    this.kill = true;\n}\n\nct.types.move(this);",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 2,
      "graph": "i3.png"
    },
    {
      "name": "AbstractMeteor",
      "depth": 1,
      "oncreate": "this.spd = ct.random.range(1, 3);\nthis.dir = 270 + ct.random.range(-3, 3);\n\nthis.graph = 'Meteor_' + ct.random.dice('Big', 'Medium', 'Small') + '_' + ct.random.dice(1, 2);\n\nthis.transform = true;\nthis.rotateSpeed = ct.random.range(-1, 1);\nthis.tr = ct.random.deg();\n\nthis.ctype = 'Enemy';",
      "onstep": "ct.types.move(this);\n\nthis.tr += this.rotateSpeed; \n\nvar obstacle = ct.place.occupied(this, this.x, this.y, 'BulletsHeroes');\nif (obstacle) {\n    this.kill = true;\n    if (obstacle.type !== 'Laser_Bolt_Blue') { // Bolts will dash through enemies\n        obstacle.kill = true;\n    }\n    \n    // Add some score points\n    ct.rooms.current.score += 5;\n}\n\nif (this.x < -100 || this.x > ct.room.width + 100 || this.y < -120 || this.y > ct.room.height + 100) {\n    this.kill = true;\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "var deathMap = {\n    'Big': 'Medium',\n    'Medium': 'Small'\n};\n\nfor (var i in deathMap) {\n    if (this.graph.indexOf(i) !== -1) {\n        var copy1 = ct.types.copy('AbstractMeteor', this.x, this.y);\n        copy1.graph = 'Meteor_' + deathMap[i] + '_' + ct.random.dice(1, 2);\n        copy1.dir = ct.random.deg();\n        \n        var copy2 = ct.types.copy('AbstractMeteor', this.x, this.y);\n        copy2.graph = 'Meteor_' + deathMap[i] + '_' + ct.random.dice(1, 2);\n        copy2.dir = 180 + copy1.dir + ct.random.range(-10, 10);\n    }\n}",
      "uid": 3,
      "graph": "i15.png"
    },
    {
      "name": "Laser_Cross_Blue",
      "depth": -1,
      "oncreate": "this.spd = 15;\nthis.dir = ct.random.range(60, 120);\nthis.ctype = 'BulletsHeroes';\n\nthis.transform = true;\nthis.tr = ct.random.deg();",
      "onstep": "if (this.y < -48) {\n    this.kill = true;\n}\nct.types.move(this);",
      "ondraw": "this.tr += 15;\nct.draw(this);",
      "ondestroy": "",
      "uid": 4,
      "graph": "i4.png"
    },
    {
      "name": "GameController",
      "depth": 0,
      "oncreate": "this.asteroidTimer = ct.speed * 3;\n\nthis.encounterTimer = ct.speed * 10;\n\nthis.waveTimer = ct.speed * 30;\n\nthis.UfoTimer = ct.speed * 75;",
      "onstep": "this.asteroidTimer --;\nif (this.asteroidTimer <= 0) {\n    this.asteroidTimer = ct.random.range(ct.speed * 0.5, ct.speed * 3);\n    ct.types.copy('AbstractMeteor', ct.random(ct.room.width), -100);\n}\n\nthis.encounterTimer --;\nif (this.encounterTimer <= 0) {\n    this.encounterTimer = ct.random.range(ct.speed * 4, ct.speed * 7);\n    ct.types.copy('Enemy_Shooter', ct.random(ct.room.width), -100);\n}\n\nthis.waveTimer --;\nif (this.waveTimer <= 0) {\n    this.waveTimer = ct.random.range(ct.speed * 20, ct.speed * 45);\n    \n    // create 5 enemies, one by one in 1.4 seconds\n    ct.types.copy('Enemy_Wiggler', 0, -100);\n    setTimeout(function() {\n        ct.types.copy('Enemy_Wiggler', 0, -100);\n    }, 350);\n    setTimeout(function() {\n        ct.types.copy('Enemy_Wiggler', 0, -100);\n    }, 700);\n    setTimeout(function() {\n        ct.types.copy('Enemy_Wiggler', 0, -100);\n    }, 1050);\n    setTimeout(function() {\n        ct.types.copy('Enemy_Wiggler', 0, -100);\n    }, 1400);\n}\n\nthis.UfoTimer --;\nif (this.UfoTimer <= 0) {\n    this.UfoTimer = ct.random.range(ct.speed * 60, ct.speed * 90);\n    ct.types.copy('Enemy_Ufo', ct.random(ct.room.width), -100);\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 5,
      "graph": -1
    },
    {
      "name": "Logo",
      "depth": 0,
      "oncreate": "// The logo floats vertically. Let's use a sine function for that. \n// We will need a variable to change its phase\n\nthis.phase = 0;",
      "onstep": "",
      "ondraw": "this.phase += 2.5 / ct.speed;\nif (this.phase > Math.PI * 2) {\n    this.phase -= Math.PI * 2;\n}\n\nct.draw.copy(this, this.x, this.y + Math.sin(this.phase) * 8);",
      "ondestroy": "",
      "uid": 6,
      "graph": "i19.png"
    },
    {
      "name": "StartButton",
      "depth": 0,
      "oncreate": "",
      "onstep": "if (ct.mouse.pressed) {\n    console.log('pressed');\n    console.log(ct.mouse.x, ct.mouse.y, this, ct.u.prect);\n    if (ct.u.prect(ct.mouse.x, ct.mouse.y, this)) {\n        console.log('hi');\n        ct.rooms.switch('InGame');\n    }\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 7,
      "graph": "i18.png"
    },
    {
      "name": "AbstractBonus",
      "depth": 3,
      "oncreate": "// get the player\nvar player = ct.types.list['Player_Blue'][0];\nconsole.log(this.graph);\nif (player.lives < 3) {\n    // add a chance to spawn a life bonus if there is 2 or less lives\n    this.graph = ct.random.dice('Bonus_Lives', 'Bonus_Spread', 'Bonus_Bolt', 'Bonus_Cross');\n} else {\n    this.graph = ct.random.dice('Bonus_Spread', 'Bonus_Bolt', 'Bonus_Cross');\n}\n\nthis.spd = 3;\nthis.dir = 270;\nconsole.log(this.graph);",
      "onstep": "ct.types.move(this);\n\nvar player = ct.place.meet(this, this.x, this.y, 'Player_Blue');\nif (player) {\n    console.log(this.graph);\n    if (this.graph === 'Bonus_Lives') {\n        player.lives ++;\n    } else {\n        var graphToWeaponMap = {\n            'Bonus_Spread': 'spread',\n            'Bonus_Bolt': 'bolt',\n            'Bonus_Cross': 'cross'\n        };\n        player.weapon = graphToWeaponMap[this.graph];\n    }\n    // Consume bonus\n    this.kill = true;\n}\n\n// Destroy bonus if it fell off the screen\nif (this.y > ct.room.height + 48) {\n    this.kill = true;\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 8,
      "graph": "i20.png"
    },
    {
      "name": "Enemy_Shooter",
      "depth": 2,
      "oncreate": "// This mob will slowly move to the bottom of the screen, shooting projectiles \n// from time to time\n\nthis.spd = 3;\nthis.dir = 270;\n\nthis.ctype = 'Enemy';\n\nthis.shootTimer = 2 * ct.speed;",
      "onstep": "ct.types.move(this);\n\nthis.shootTimer --;\nif (this.shootTimer < 0) {\n    ct.types.copy('EnemyBullet', this.x, this.y);\n    this.shootTimer = 3 * ct.speed;\n}\n\nvar obstacle = ct.place.occupied(this, this.x, this.y, 'BulletsHeroes');\nif (obstacle) {\n    this.kill = true;\n    if (obstacle.type !== 'Laser_Bolt_Blue') { // Bolts will dash through enemies\n        obstacle.kill = true;\n    }\n    \n    // Add some score points\n    ct.rooms.current.score += 25;\n}\n\nif (this.y > ct.room.height + 100) {\n    this.kill = true;\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "ct.types.copy('Explosion', this.x, this.y);\n\nif (ct.random.chance(10)) {\n    ct.types.copy('AbstractBonus', this.x, this.y);\n}",
      "uid": 9,
      "graph": "i24.png"
    },
    {
      "name": "EnemyBullet",
      "depth": -1,
      "oncreate": "this.spd = 10;\nthis.dir = 270;\nthis.ctype = 'EnemyBullet';\nct.sound.spawn('Laser_Big');",
      "onstep": "ct.types.move(this);\n\n// Destroy a bullet if it fell off the screen\nif (this.y > ct.room.height + 32) {\n    this.kill = true;\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 10,
      "graph": "i26.png"
    },
    {
      "name": "Explosion",
      "depth": 0,
      "oncreate": "this.transform = true;\nthis.tr = ct.random.deg();",
      "onstep": "ct.types.move(this);",
      "ondraw": "ct.draw(this);\n\nthis.ta -= 0.1;\nif (this.ta < 0) {\n    this.kill = true;\n}",
      "ondestroy": "",
      "uid": 12,
      "graph": "i27.png"
    },
    {
      "name": "Enemy_Wiggler",
      "depth": 2,
      "oncreate": "    // This mob will move in a sine wave and emit projectiles randomly\nthis.phase = 0;\n\nthis.ctype = 'Enemy';\n\nthis.shootTimer = ct.random.dice(2, 3, 4) * ct.speed;",
      "onstep": "this.phase += 2 / ct.speed;\n\nthis.y += 5;\nthis.x = Math.sin(this.phase) * (ct.room.width * 0.4) + ct.room.width / 2;\n\n\nthis.shootTimer --;\nif (this.shootTimer < 0) {\n    ct.types.copy('EnemyBullet', this.x, this.y);\n    this.shootTimer = ct.random.dice(2, 3, 4) * ct.speed;\n}\n\nvar obstacle = ct.place.occupied(this, this.x, this.y, 'BulletsHeroes');\nif (obstacle) {\n    this.kill = true;\n    if (obstacle.type !== 'Laser_Bolt_Blue') { // Bolts will dash through enemies\n        obstacle.kill = true;\n    }\n    \n    // Add some score points\n    ct.rooms.current.score += 30;\n}\n\nif (this.y > ct.room.height + 100) {\n    this.kill = true;\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "ct.types.copy('Explosion', this.x, this.y);\n\nif (ct.random.chance(10)) {\n    ct.types.copy('AbstractBonus', this.x, this.y);\n}",
      "uid": 13,
      "graph": "i25.png"
    },
    {
      "name": "Laser_Bolt_Blue",
      "depth": 0,
      "oncreate": "this.spd = 25;\nthis.dir = 90;\nthis.ctype = 'BulletsHeroes';",
      "onstep": "if (this.y < -48) {\n    this.kill = true;\n}\n\nct.types.move(this);",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 14,
      "graph": "i5.png"
    },
    {
      "name": "Enemy_Ufo",
      "depth": 3,
      "oncreate": "this.targetx = ct.random.range(75, ct.room.width - 150);\nthis.targety = ct.random.range(75, 300);\n\nthis.transform = true;\n\n// this mob will be quite sturdy\nthis.health = 30;\n\nthis.jumpTimer = ct.speed;\nthis.shootTimer = ct.speed;",
      "onstep": "// Simple interpolation between two points through time\nthis.x += (this.targetx - this.x) * 0.1;\nthis.y += (this.targety - this.y) * 0.1;\n\nthis.shootTimer --;\nif (this.shootTimer < 0) {\n    ct.types.copy('Laser_Cross_Red', this.x, this.y);\n    this.shootTimer = ct.speed * 0.5;\n}\n\nthis.jumpTimer --;\nif (this.jumpTimer < 0) {\n    // Start jumping to a new location  \n    this.jumpTimer = ct.speed * 2;\n    this.targetx = ct.random.range(75, ct.room.width - 150);\n    this.targety = ct.random.range(75, 300);\n}\n\nvar obstacle = ct.place.occupied(this, this.x, this.y, 'BulletsHeroes');\nif (obstacle) {\n    if (obstacle.type === 'Laser_Bolt_Blue') { // Bolts will do additional damage\n        this.health -= 5;\n    } else {\n        this.health -= 1;\n    }\n    obstacle.kill = true;\n    if (this.health <= 0) {\n        this.kill = true;\n        // Add some score points\n        ct.rooms.current.score += 125;\n    }    \n}",
      "ondraw": "this.tr += 5;\nct.draw(this);",
      "ondestroy": "ct.types.copy('Explosion', this.x, this.y);\nct.types.copy('AbstractBonus', this.x, this.y);",
      "uid": 15,
      "graph": "i28.png"
    },
    {
      "name": "Laser_Cross_Red",
      "depth": 0,
      "oncreate": "this.spd = 10;\nthis.dir = ct.random.range(270-45, 270+45);\n\nthis.ctype = 'EnemyBullet';\nct.sound.spawn('Laser_Big');\n\nthis.transform = true;\nthis.tr = ct.random.deg();",
      "onstep": "this.tr -= 9;\nct.types.move(this);\n\n// Destroy a bullet if it fell off the screen\nif (this.y > ct.room.height + 32) {\n    this.kill = true;\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 16,
      "graph": "i29.png"
    },
    {
      "name": "OhNo",
      "depth": 0,
      "oncreate": "",
      "onstep": "ct.types.move(this);",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 17,
      "graph": "i31.png"
    },
    {
      "name": "RetryButton",
      "depth": 0,
      "oncreate": "",
      "onstep": "if (ct.mouse.pressed) {\n    console.log('pressed');\n    console.log(ct.mouse.x, ct.mouse.y, this, ct.u.prect);\n    if (ct.u.prect(ct.mouse.x, ct.mouse.y, this)) {\n        console.log('hi');\n        ct.rooms.switch('InGame');\n    }\n}",
      "ondraw": "ct.draw(this);",
      "ondestroy": "",
      "uid": 18,
      "graph": "i30.png"
    }
  ],
  "sounds": [
    {
      "name": "Laser_Small",
      "uid": 0,
      "origname": "s0.mp3",
      "lastmod": 1508402385413
    },
    {
      "name": "Laser_Medium",
      "uid": 1,
      "origname": "s1.mp3",
      "lastmod": 1508402408072
    },
    {
      "name": "Laser_Big",
      "uid": 2,
      "origname": "s2.mp3",
      "lastmod": 1508402430765
    }
  ],
  "styles": [
    {
      "name": "ScoreText",
      "fill": {
        "type": "0",
        "gradsize": 28,
        "color1": "#7DFFF8",
        "color2": "#0044FF",
        "gradtype": "1",
        "color": "#75D1E3"
      },
      "font": {
        "family": "'Press Start 2P', sans-serif",
        "size": 24,
        "weight": "900",
        "italic": true,
        "valign": "top",
        "halign": "left"
      },
      "uid": 1,
      "origname": "s1",
      "shadow": {
        "color": "#005E3A",
        "x": -3,
        "y": -2,
        "blur": 0
      }
    },
    {
      "name": "Blue12",
      "uid": 2,
      "origname": "s2",
      "font": {
        "family": "'Press Start 2P', sans-serif",
        "size": 12,
        "weight": 400,
        "italic": false,
        "valign": "middle",
        "halign": "center"
      },
      "fill": {
        "type": "0",
        "color": "#446ADB"
      }
    }
  ],
  "rooms": [
    {
      "name": "InGame",
      "oncreate": "this.score = 0;",
      "onstep": "",
      "ondraw": "ct.styles.set('ScoreText');\nct.draw.fix(20, 20);\n\nct.draw.text('Score: ' + this.score, 0, 0);\n\nct.draw.unfix();\nct.styles.reset();",
      "onleave": "",
      "width": 800,
      "height": 800,
      "backgrounds": [
        {
          "depth": "-20",
          "graph": "i2.png"
        }
      ],
      "layers": [
        {
          "depth": 0,
          "copies": [
            {
              "x": 400,
              "y": 700,
              "uid": 1
            },
            {
              "x": 400,
              "y": 250,
              "uid": 5
            }
          ]
        }
      ],
      "uid": 1,
      "lastmod": 1521798751543,
      "grid": 50
    },
    {
      "name": "MainMenu",
      "oncreate": "",
      "onstep": "",
      "ondraw": "ct.styles.set('Blue12');\nct.draw.text('Make Great Games in a Free Game Editor!!!', ct.room.width / 2, ct.room.height - 50);\nct.draw.text('https://ctjs.rocks/', ct.room.width / 2, ct.room.height - 30);\nct.styles.reset();",
      "onleave": "",
      "width": 800,
      "height": 800,
      "backgrounds": [
        {
          "depth": 0,
          "graph": "i2.png"
        }
      ],
      "layers": [
        {
          "depth": 0,
          "copies": [
            {
              "x": 384,
              "y": 192,
              "uid": 6
            },
            {
              "x": 384,
              "y": 512,
              "uid": 7
            }
          ]
        }
      ],
      "uid": 2,
      "grid": 64,
      "lastmod": 1521799501077
    },
    {
      "name": "RetryScreen",
      "oncreate": "this.score = Number(localStorage.score);\nthis.highscore = Number(localStorage.highscore || 0);\n\nlocalStorage.highscore = Math.max(this.highscore, this.score);",
      "onstep": "",
      "ondraw": "ct.styles.set('ScoreText');\nct.draw.text('Score: '+ this.score, 200, ct.room.height / 2 - 20);\nct.draw.text('Highscore: '+ this.score, 200, ct.room.height / 2 + 20);\nct.styles.reset();\n\nct.styles.set('Blue12');\nct.draw.text('This demo was made in ct.IDE editor with ct.js framework', ct.room.width / 2, ct.room.height - 50);\nct.draw.text('https://ctjs.rocks/', ct.room.width / 2, ct.room.height - 30);\nct.styles.reset();",
      "onleave": "",
      "width": 800,
      "height": 800,
      "backgrounds": [
        {
          "depth": 0,
          "graph": "i2.png"
        }
      ],
      "layers": [
        {
          "depth": 0,
          "copies": [
            {
              "x": 384,
              "y": 192,
              "uid": 17
            },
            {
              "x": 384,
              "y": 576,
              "uid": 18
            }
          ]
        }
      ],
      "uid": 3,
      "grid": 64,
      "lastmod": 1521799524443
    }
  ],
  "graphtick": 32,
  "soundtick": 4,
  "roomtick": 3,
  "typetick": 19,
  "styletick": 2,
  "starting": 0,
  "settings": {
    "minifyhtmlcss": false,
    "minifyjs": false,
    "title": "Catsteroids",
    "author": "CoMiGo Games",
    "site": "http://comigogames.ru/"
  },
  "palette": [
    "#FFFFFF",
    "#B48FFF",
    "#10102E"
  ],
  "startroom": 2
}
