{
    "main": {
        "name": "Пространственный котэ",
        "nameeng": "The Place Cat",
        "help": "Проверяет столкновения между копиями.\n\n# Подготовка типов\nВ столкновениях участвуют только те копии, которые обладают специальным параметром `shape` и данными о маске столкновений. Обычно это делается IDE. К примеру, этот код, добавленный в событие создания копии, выдаст копию как круглое тело радиусом в 50 пикселей:\n\n``` javascript\n    this.shape = {\n        type: 'circle',\n        r:50\n}\n```\n\nВажно создавать новый объект, а не менять параметры имеющегося, т.к. прямое изменение (вида `this.shape.r = 10;`) повлияет в первую очередь на графику, а затем – на все копии, созданные с такой графикой.\n\nКроме фигуры, каждый тип может обладать свойством `ctype` – с ним можно создавать разные группы фигур, например, «враги», «препятствия», «ресурсы» и другие.\n\n# Виды масок столкновений\n\n* `'point'` – не требует параметры;\n* `'circle'` – параметр `r`;\n* `'rect'` – параметры `left`, `right`, `top`, `bottom`, которые означают *отступ от центра объекта* в определённую сторону для создания прямоугольной маски. Обычно все значения положительны.\n\n# Известные баги\nОчень коряво работает проверка столкновений между точкой и прямоугольником.\n\nПроверка столкновений между кругом и прямоугольником может не работать, когда прямоугольник в разы больше круга.",
        "version": "1.0.1"
    },
    "info": {
        "author": "Cosmo Myzrail Gorynych",
        "mail": "admin@nersta.ru"
    },
    "methods": {
        "free(me,x,y,type)": {
            "exp": "Определяет, свободно ли место в координатах x, y для копии me. type – необязательный параметр, который позволяет определять, нет ли столкновений с определённой группой копий (см. св-во ctype).\nВозвращает true (место свободно) или false(есть столкновения)."
        },
        "meet(me,x,y,type)": {
            "exp": "Определяет, есть ли столкновения с копиями типа type для копии me. \nВозвращает false или ссылку на первую копию, с которой произошло пересечение."
        },
        "check[masks](params)": {
            "exp": "Используется другими функциями для проверки столкновений. masks – это строка формата 'shape1.shape2'."
        },
        "nearest(x,y,type)": {
            "exp": "Возвращает ближайшую к указанной точке копию. Если копий данного типа нет вообще, возвращает false."
        },
        "furthest(x,y,type)": {
            "exp": "Возвращает самую отдалённую от указанной точки копию. Если копий данного типа нет вообще, возвращает false."
        }
    },
    "params": {
        "lastdist": {
            "exp": "Возвращает последнее расстояние между точкой и ближайшей/самой дальней копии к ней, определённое при последнем исполнении функции furthest или nearest."
        }
    }
}
